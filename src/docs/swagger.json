{
    "swagger": "2.0",
    "info": {
        "description": "Go Web Server push starter",
        "title": "Gommence",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/auth/signin": {
            "post": {
                "description": "Receives login credentials and returns a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in the system",
                "parameters": [
                    {
                        "description": "Credentials",
                        "name": "loginData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginCredentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.LoggedUser"
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Error generating response or token"
                    }
                }
            }
        },
        "/health": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Misc"
                ],
                "summary": "Health checking URL",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/user/": {
            "get": {
                "description": "Get all Users in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all Users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Error generating response"
                    }
                }
            }
        },
        "/user/{userId}": {
            "get": {
                "description": "Get all Users in the system",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all Users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID del usuario",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.User"
                        }
                    },
                    "400": {
                        "description": "Invalid data"
                    },
                    "500": {
                        "description": "Error generating response or token"
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.LoggedUser": {
            "description": "Logged user information",
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "Authenticaton token",
                    "type": "string"
                }
            }
        },
        "dtos.LoginCredentials": {
            "description": "Request to sign in the program",
            "type": "object",
            "required": [
                "email",
                "secret"
            ],
            "properties": {
                "email": {
                    "description": "Email of the user signing in",
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "secret": {
                    "description": "Password or third party token of the user signing in",
                    "type": "string",
                    "example": "password"
                }
            }
        },
        "dtos.User": {
            "description": "User data",
            "type": "object",
            "properties": {
                "email": {
                    "description": "Email of the new user",
                    "type": "string",
                    "example": "john.doe@example.com"
                },
                "first_name": {
                    "description": "First name of the new user",
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "description": "First name of the new user",
                    "type": "string",
                    "example": "23GfxRTs"
                },
                "last_name": {
                    "description": "First last name of the new user",
                    "type": "string",
                    "example": "Doe"
                },
                "second_last_name": {
                    "description": "Second last name of the new user",
                    "type": "string",
                    "example": "Smith"
                }
            }
        }
    }
}